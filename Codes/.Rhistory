legend(x = "topleft",legend = c("C4 Histhrone",
"Q > 9000",
"Début/Fin",
"Intervalle de conf. 95%"),
col = c( "red","blue","black","blue"),lty = c(1,1,0,2),
pch = c(20, 20,19,NA),   pt.cex = c(1,1,2,1), cex = 1.1)
# dev.off()
#C3 only
# points(x = PC3$AnneeCrue, y = PC3$FloodNumber, type = 'b', pch = 19, col = "blue")
#C4 only
points(x = PC4$AnneeCrue, y = PC4$FloodNumber, type = 'b', pch = 19, col = "red")
#confidence intervals
lines(x = PCX$AnExp, y =  PCX$EllipInf, lty = 2,col = "blue")
lines(x = PCX$AnExp, y =  PCX$EllipSup, lty = 2,col="blue")
###Poisson process
PCX=PoissoN(CX$An[which(CX$An>Andeb)],Andeb=Andeb,Anfin = Anfin)
# PC3=PoissoN(CX$An[which(CX$An>Andeb & CX$Cat=="C4")],Andeb=Andeb,Anfin = Anfin)
PC4=PoissoN(CX$An[which(CX$An>Andeb & CX$Cat=="C3")],Andeb=Andeb,Anfin = Anfin)
# # PoissoN(CXall$An[which(CXall$An > Andeb)],Andeb=Andeb,Anfin = 2000,Anrupt = list(Anfin))
# pdf(file = paste0(dir.plots,"Poisson_C3-C4_FR.pdf"), width = 9, height = 5)
plot(x = PCX$AnneeCrue, y = PCX$FloodNumber, type='b', pch = 19, col ="blue",
# ylab = "Cumulated flood number", xlab = "Years")
ylab = "Nombre cumulé de crues", xlab = "Années")
#C3 only
# points(x = PC3$AnneeCrue, y = PC3$FloodNumber, type = 'b', pch = 19, col = "blue")
#C4 only
points(x = PC4$AnneeCrue, y = PC4$FloodNumber, type = 'b', pch = 19, col = "red")
#confidence intervals
lines(x = PCX$AnExp, y =  PCX$EllipInf, lty = 2,col = "blue")
lines(x = PCX$AnExp, y =  PCX$EllipSup, lty = 2,col="blue")
# lines(x = PC3$AnExp, y =  PC3$EllipInf, lty = 2,col = "blue")
# lines(x = PC3$AnExp, y =  PC3$EllipSup, lty = 2,col="blue")
lines(x = PC4$AnExp, y =  PC4$EllipInf, lty = 2,col = "red")
lines(x = PC4$AnExp, y =  PC4$EllipSup, lty = 2,col="red")
#starting points
points(x = PCX$AnneeCrue[1], y = PCX$FloodNumber[1], pch = 19,col = "black", cex = 1.5)
points(x = tail(PCX$AnneeCrue,1),y = tail(PCX$FloodNumber,1),pch =19, col = "black", cex = 1.5)
# points(x = tail(PC3$AnneeCrue,1),y = tail(PC3$FloodNumber,1),pch = 19, col = "black", cex = 1.5)
points(x = tail(PC4$AnneeCrue,1),y = tail(PC4$FloodNumber,1),pch = 19, col = "black", cex = 1.5)
#legend EN
# legend(x = "topleft",legend = c("C3 & C4 floods",
#                                 # "C3 floods",
#                                 "C4 floods",
#                                 "Start/End ",
#                                 "95% confidence intervals"),
#
#        col = c(
#          # "purple",
#                  "blue","red","indianred","black"),lty = c(1,#1,
#                        1,0,2),
#        pch = c(20,#20,
#                20,20,NA),   pt.cex = c(1,#1,
#                                        1,2,1), cex = 1.2)
#Legend FR
legend(x = "topleft",legend = c("Q > S3",
"Q > S4",
"Début/Fin",
"Intervalle de conf. 95%"),
col = c( "blue","red","black","black"),lty = c(1,1,0,2),
pch = c(20, 20,19,NA),   pt.cex = c(1,1,2,1), cex = 1.1)
# dev.off()
P7 = PoissoN(Q$an[which(Q$mp>7000 & Q$an < 1970)],Andeb=1816,Anfin = 1970)
P9 = PoissoN(Q$an[which(Q$mp>9000 & Q$an < 1970)],Andeb=1816,Anfin = 1970)
P8_b = PoissoN(Q$an[which(Q$mp>8000)],Andeb=1816,Anfin = 2020, Anrupt = list(1940))
pdf(file = paste0(dir.plots,"Poisson_Qrecent_FR.pdf"), width = 9, height = 5)
plot(x = P7$AnneeCrue, y = P7$FloodNumber, type='b', pch = 19, col ="blue",
ylab = "Nombre cumulé de crues", xlab = "Années")
points(x = P9$AnneeCrue, y = P9$FloodNumber, type = 'b', pch = 19, col = "red")
#confidence intervals
lines(x = P7$AnExp, y =  P7$EllipInf, lty = 2,col = "blue")
lines(x = P7$AnExp, y =  P7$EllipSup, lty = 2,col="blue")
lines(x = P9$AnExp, y =  P9$EllipInf, lty = 2,col = "red")
lines(x = P9$AnExp, y =  P9$EllipSup, lty = 2,col="red")
#starting/end points
points(x = P7$AnneeCrue[1], y = P7$FloodNumber[1], pch = 19,col = "black", cex = 1.5)
points(x = tail(P7$AnneeCrue,1),y = tail(P7$FloodNumber,1),pch = 19, col = "black", cex = 1.5)
points(x = tail(P9$AnneeCrue,1),y = tail(P9$FloodNumber,1),pch = 19, col = "black", cex = 1.5)
#legend expression(paste("Discharge [",m^3,".",s^-1,"]",sep=""))
legend(x = "topleft",legend = c(expression(paste("Q > 7000 ",m^3,"/",s,sep = "")),
expression(paste("Q > 9000 ",m^3,"/",s,sep = "")),
"Début/Fin",
"Intervalle de conf. 95%"),
col = c("blue","red","black","black"),lty = c(1,1,0,2),pch = c(20,20,20,NA),
pt.cex = c(1,1,2,1), cex = 1.2)
dev.off()
#### Perception threshold determination
# Q = Q[which(Q$an < 2000),]
Q$type = "Aucune"
# associate floods from systematic period to pichard flood type
for(y in 1:length(CXall$An)) { Q$type[which(Q$an == CXall$An[y])] = CXall$Cat[y] }
## minimum discharge of C3 flood
Q[which(Q$type != "Aucune")[(which.min(Q$mp[which(Q$type != "Aucune")]))],]
TsC3 = Q[which(Q$type != "C3")[(which.min(Q$mp[which(Q$type != "C3")]))],]
TsC4 =  Q[which(Q$type == "C4")[(which.min(Q$mp[which(Q$type == "C4")]))],]
# write.table(TsC3, paste0(dir.data,"ThresholdC3.txt"),row.names = F)
# write.table(TsC4,  paste0(dir.data,"ThresholdC4.txt"),row.names = F)
# Qb = Q[which(Q$type == "C4" | Q$type == "Aucune"),]
# Categ =
ggplot(data=Qb)+
geom_errorbar(aes(x = an, ymin = tot2.5,ymax=tot97.5,color=type))+
geom_point(aes(x = an, y=mp ,color=type))+
# geom_hline(aes(x = an, yintercept = min(mp[which(type=="C3")])),
#           col = "blue",alpha = 0.6,lty=2,lwd=1)+
# geom_hline(aes(x = an, yintercept = min(mp[which(type=="C4")])),
#           col="red",alpha = 0.6,lty=2,lwd=1)+
geom_hline(aes(x = an, yintercept = 9000),
col="red",alpha = 0.6,lty=1,lwd=1)+
# geom_hline(aes(x = an, yintercept = 7200),
#           col="blue",alpha = 0.6,lty=1,lwd=1)+
# scale_color_manual("Catégorie",values=c("grey","blue","red"))+
scale_color_manual("Catégorie",values=c("grey","red"))+
theme_light(base_size = 25)+
labs(x="Année",y=expression(paste("Débit [",m^3,"/",s,"]",sep = "")))
# ggsave(path = dir.plots, filename = "C4_SystematicPeriod-FR.pdf", width = 14, height = 7)
# ### Pettit and MK tests
# Pett = rep(NA,Nspag); Mkt = Pett
# for(spag in 1:Nspag){
#   Pett[spag] =  pettitt.test(Spags[,spag])[4][1]
#   Mkt[spag] = mk.test(Spags[,spag])[2][1] }
# length(which(Pett>0.05))/Nspag
# length(which(Mkt>0.05))/Nspag
# Q=Qb
### PLOT ECHANTILLON MIXTE
SpagsGG = melt(Spags)
GGcrues = ggplot()+
# geom_errorbar(aes(x = Q$an, ymin = Q$tot2.5,ymax=Q$tot97.5,color="Période\nsystématique"),width = 2)+
# geom_point(aes(x = Q$an, y=Q$mp,color="Période\nsystématique" ))+
geom_errorbar(aes(x = Q$an, ymin = Q$tot2.5,ymax=Q$tot97.5,color="Systematic"),width = 2)+
geom_point(aes(x = Q$an, y=Q$mp,color="Systematic" ))+
#C3
# geom_polygon(aes(x = c(1500,1816,1816,1500),y = c(5000,5000,9000,9000),fill="S3"),alpha=0.1)+
# geom_errorbar(aes(x=CX$An[which(CX$Cat == "C3")], ymin = 7000, ymax = 20000,color="Cat. C3"),
#               lty=2,width=0)+
# geom_point(aes(x=CX$An[which(CX$Cat == "C3")], y = 7000,color="Cat. C3"),
#            shape = 17, size = 2.5)+
#C4
geom_polygon(aes(x = c(1500,1816,1816,1500),y = c(7000,7000,11000,11000),fill="S4"),alpha=0.1)+
geom_errorbar(aes(x=CX$An[which(CX$Cat == "C4")], ymin = 9000, ymax = 20000,color="Cat. C4"),
lty=2,width=0)+
geom_point(aes(x=CX$An[which(CX$Cat == "C4")], y = 9000,color="Cat. C4"),
shape = 17,size=2.5)+
# scale_fill_manual(values=c("blue","red"))+
# scale_color_manual(values=c("blue","red","black"))+
scale_fill_manual(values=c("red"))+
scale_color_manual(values=c("red","black"))+
coord_cartesian(xlim = c(1520,2000),ylim=c(2400,15000))+
theme_light(base_size = 25)+
# xlab("Années")+
# ylab(expression(paste("Débit [",m^3,"/",s,"]",sep = "")))+
xlab("Years")+
ylab(expression(paste("Discharge [",m^3,"/",s,"]",sep = "")))+
labs(fill = "", colour = "")
ggsave(plot = GGcrues, filename = "EchMixteC4Bcr.pdf",path = dir.plots, width = 15, height = 10)
### PLOT ECHANTILLON DEGRADE
GGcrues2 = ggplot()+
# geom_errorbar(data = Q[which(Q$an > 1969),], aes(x = an, ymin = tot2.5,ymax=tot97.5,color="Période\nsystématique"),width = 2)+
# geom_point(data = Q[which(Q$an > 1969),],aes(x = an, y=mp,color="Période\nsystématique" ))+
geom_errorbar(data = Q[which(Q$an > 1969),], aes(x = an, ymin = tot2.5,ymax=tot97.5,color="Systematic"),width = 2)+
geom_point(data = Q[which(Q$an > 1969),],aes(x = an, y=mp,color="Systematic" ))+
#C3
# geom_polygon(aes(x = c(1500,1816,1816,1500),y = c(5000,5000,9000,9000),fill="S3"),alpha=0.1)+
# geom_errorbar(aes(x=CX$An[which(CX$Cat == "C3")], ymin = 7000, ymax = 20000,color="Cat. C3"),
#               lty=2,width=0)+
# geom_point(aes(x=CX$An[which(CX$Cat == "C3")], y = 7000,color="Cat. C3"),
#            shape = 17, size = 2.5)+
#C4
geom_errorbar(data = Q[which(Q$an < 1970),], aes(x = an, ymin = tot2.5,ymax=tot97.5),
width = 2,color="lightgrey", alpha = 0.9)+
geom_point(data = Q[which(Q$an < 1970),],aes(x = an, y=mp ),color="lightgrey", alpha = 0.9)+
geom_polygon(aes(x = c(1816,1969,1969,1816),y = c(7000,7000,11000,11000),fill="S4"),alpha=0.1)+
geom_errorbar(aes(x=Q$an[which(Q$an <1970 & Q$mp > 9000)], ymin = 9000, ymax = 20000,color="Cat. C4"),
lty=2,width=0)+
geom_point(aes(x=Q$an[which(Q$an <1970 & Q$mp > 9000)], y = 9000,color="Cat. C4"),
shape = 17,size=2.5)+
# scale_fill_manual(values=c("blue","red"))+
# scale_color_manual(values=c("blue","red","black"))+
scale_fill_manual(values=c("red"))+
scale_color_manual(values=c("red","black"))+
coord_cartesian(xlim = c(1820,2020),ylim=c(2400,14000))+
theme_light(base_size = 25)+
# xlab("Années")+
# ylab(expression(paste("Débit [",m^3,"/",s,"]",sep = "")))+
xlab("Years")+
ylab(expression(paste("Discharge [",m^3,"/",s,"]",sep = "")))+
labs(fill = "", colour = "")
ggsave(plot = GGcrues2, filename = "EchMixteDegrad.pdf",path = dir.plots, width = 15, height = 10)
###### VERIF HOMOG INTER ECHANTILLONS
# Qall = c(CX[which(CX$Cat == "C4"),1], Q$an[which(Q$mp>9000)] )
# Pall = PoissoN(Qall, Andeb = Andeb, Anfin = 2020, Anrupt = list(1816))
#
#
#
# pdf(file = paste0(dir.plots,"Poisson_Qall.pdf"), width = 9, height = 5)
#
# dev.off()
# pdf(file = paste0(dir.plots,"Poisson_C4_recent.pdf"), width = 9, height = 5)
plot(x = PC42$AnneeCrue, y = PC42$FloodNumber, type='b', pch = 19, col ="red",
ylab = "Cumulated flood number", xlab = "Years")
# ylab = "Nombre cumulé de crues", xlab = "Années")
points(x = PC42$AnneeCrue[which(C42>1816)+1],
y = PC42$FloodNumber[which(C42>1816)+1], type = 'b', pch = 19, col = "blue")
#confidence intervals
lines(x = PC42$AnExp, y =  PC42$EllipInf, lty = 2,col = "blue")
lines(x = PC42$AnExp, y =  PC42$EllipSup, lty = 2,col="blue")
#starting points
points(x = PC42$AnneeCrue[1], y = PC42$FloodNumber[1], pch = 19,col = "black", cex = 1.5)
points(x = tail(PC42$AnneeCrue,1),y = tail(PC42$FloodNumber,1),pch =19, col = "black", cex = 1.5)
#Legend FR
legend(x = "topleft",legend = c("C4 Histhrone",
"Q > 9000",
# "Début/Fin",
# "Intervalle de conf. 95%"
"Start/End",
"95% conf. interval"
),
col = c( "red","blue","black","blue"),lty = c(1,1,0,2),
pch = c(20, 20,19,NA),   pt.cex = c(1,1,2,1), cex = 1.1)
pdf(file = paste0(dir.plots,"Poisson_C4_recent.pdf"), width = 9, height = 5)
plot(x = PC42$AnneeCrue, y = PC42$FloodNumber, type='b', pch = 19, col ="red",
ylab = "Cumulated flood number", xlab = "Years")
# ylab = "Nombre cumulé de crues", xlab = "Années")
points(x = PC42$AnneeCrue[which(C42>1816)+1],
y = PC42$FloodNumber[which(C42>1816)+1], type = 'b', pch = 19, col = "blue")
#confidence intervals
lines(x = PC42$AnExp, y =  PC42$EllipInf, lty = 2,col = "blue")
lines(x = PC42$AnExp, y =  PC42$EllipSup, lty = 2,col="blue")
#starting points
points(x = PC42$AnneeCrue[1], y = PC42$FloodNumber[1], pch = 19,col = "black", cex = 1.5)
points(x = tail(PC42$AnneeCrue,1),y = tail(PC42$FloodNumber,1),pch =19, col = "black", cex = 1.5)
#Legend FR
legend(x = "topleft",legend = c("C4 Histhrone",
"Q > 9000",
# "Début/Fin",
# "Intervalle de conf. 95%"
"Start/End",
"95% conf. interval"
),
col = c( "red","blue","black","blue"),lty = c(1,1,0,2),
pch = c(20, 20,19,NA),   pt.cex = c(1,1,2,1), cex = 1.1)
dev.off()
rm(list=ls())
source("C://Users/mathieu.lucas/Desktop/GitMat/CruesHisto/Codes/Dirs&Funs.R")
###### RUN PARAMS
Nsim = 8000; Nspag = 500 ; textsize = 15
prob = c(seq(0.01,0.999,0.001),seq(0.9991,0.9999,0.0001)) ; Pr = 1/(1-prob)
starthist = 1500
endhist = 1815
#### Run or plot only ?
RUN = F
#### PLOTS EN
dir.plots = "C://Users/mathieu.lucas/Desktop/GitMat/CruesHisto/PlotsEN/"
## DIRS
case = "C4short"
dir.res.case = paste0(dir.res,"/",case) ; dir.create(dir.res.case)
dir.plot.case = paste0(dir.plots,"/",case) ; dir.create(dir.plot.case)
###### DATA LOADING
###Histrhone data
Call = read.csv2(paste0(dir.data,"CX_All.csv"))
### 1816-2020 AMAX discharges with uncertainty and spags
Spags = read.table(paste0(dir.data,"Spags_uTot_Amax.txt"))
Q = read.table(
"C://Users/mathieu.lucas/Desktop/GitMat/PropagMaxAn/Results/Quantiles_Amax.txt",
header = T)[,c(1,2,7,8)]
samples =  "C4"
Occs =  Call[which(Call$An>=starthist & Call$An<=endhist & Call$Cat == "C4"), 1]
Nhists = endhist-starthist+1
#### Threshold priors
Thres = 9000
sdThres = 500
#### Nban priors (when Nban is draw in Unif dist.) : end of histo. period - date of first OT flood
NbanS = endhist-Call$An[which(Call$An > 1500 & Call$Cat == "C4")][1]+1
StartH = starthist
MaxUnif_Nban = (Occs[1] - starthist)*2
#### 4 models
models =  "D*"
shortm = ": uS&t*"
distsTs = "Gaussian"
distsNb = "Uniform"
#### Baselines
# Baselines =     c("1816-2020","1970-2020")
# Qbaselines =    list(Q, Q[which(Q$an>endhistartif),])
# SpagsBaseline = list(Spags[, (1:Nspag) ], Spags[which(Q$an>endhistartif), (1:Nspag) ])
#### RUN MODELS
if(RUN == T){
#### Run GEV_Binom
# Fun run
GEV_Binom(Qcont = Q,
SpagCont = Spags,
Occ = data.frame(an=Occs),
Ts = list(distsTs,c(Thres,sdThres),Thres),#dist,prior,init
Nban = list(distsNb,c(NbanS,NbanS+MaxUnif_Nban),NbanS),#dist,prior,init
prob = prob,
Nsim = Nsim,
Nhist = Nhists,
dir.res = dir.res.case)
}
ind100 = length(Pr) - 18
ind1000 = length(Pr) - 9
#### Results reading init
Quant100 = list(); Quant1000 = list(); ParamAll = list(); Mp_par = list(); QuantsAll = list()
palmod = brewer.pal(4,"RdYlBu")[4]
palbase = "#4dac26"
colprior = "lightgrey"
######## RES GEV BINOM
## All quants
QuantsAll[[1]] = read.table(paste0(dir.res.case,"/Quants.txt"), header = T)[,(2:4)]
QuantsAll[[1]]$model = paste0(models,shortm); QuantsAll[[1]]$sample = samples
##Q100 & Q1000
Quant100[[1]] = read.table(paste0(dir.res.case,"/Quants.txt"), header = T)[ind100,(2:4)]
Quant100[[1]]$model = paste0(models,shortm); Quant100[[1]]$sample = samples
Quant1000[[1]] = read.table(paste0(dir.res.case,"/Quants.txt"), header = T)[ind1000,(2:4)]
Quant1000[[1]]$model = paste0(models,shortm); Quant1000[[1]]$sample = samples
## posterior params
ParamAll[[1]] = read.table(paste0(dir.res.case,"/Params.txt"), header = T)
ParamAll[[1]]$model = paste0(models,shortm); ParamAll[[1]]$sample = samples
## maxpost params
Mp_par[[1]] = read.table(paste0(dir.res.case,"/Maxpost_Par.txt"), header = T)
Mp_par[[1]]$model = paste0(models,shortm); Mp_par[[1]]$sample = samples
######## RES GEV BASELINE
dir.base = paste0(dir.res,"Baseline_1816-2020")
## All quants
# QuantsAll[[m]] = read.table(paste0(dir.case,"/Quants.txt"), header = T)[,(2:4)]
# QuantsAll[[m]]$model = paste0("GEV",Baselines[b]); QuantsAll[[m]]$sample = Baselines[b]
##Q100 & Q1000
Quant100[[2]] = read.table(paste0(dir.base,"/Quants.txt"), header = T)[ind100,(2:4)]
Quant100[[2]]$model = paste0("GEV_1816-2020"); Quant100[[2]]$sample = "1816-2020"
Quant1000[[2]] = read.table(paste0(dir.base,"/Quants.txt"), header = T)[ind1000,(2:4)]
Quant1000[[2]]$model = paste0("GEV_1816-2020"); Quant1000[[2]]$sample = "1816-2020"
## posterior params
ParamAll[[2]] = read.table(paste0(dir.base,"/Params.txt"), header = T)
ParamAll[[2]]$model = paste0("GEV_1816-2020"); ParamAll[[2]]$sample = "1816-2020"
## maxpost params
Mp_par[[2]] = read.table(paste0(dir.base,"/Maxpost_Par.txt"), header = T)
Mp_par[[2]]$model = paste0("GEV_1816-2020"); Mp_par[[2]]$sample ="1816-2020"
## RESULTS TIDYING
Params = melt.list(ParamAll) ; Params$model = as.factor(Params$model)
Quants100 = cast(melt.list(Quant100) );  Quants1000 = cast(melt.list(Quant1000) )
ParamsMp = melt.list(Mp_par)
Quants100$model = as.factor(Quants100$model);Quants1000$model = as.factor(Quants1000$model)
Quants100$model =fct_relevel(Quants100$model,
as.vector(Quants100$model[c(2,1)]) )
Quants1000$model=fct_relevel(Quants1000$model,
as.vector(Quants1000$model[c(2,1)]) )
#### DF RESUME RESULTS
ResAll = data.frame(model = c(models,"GEV_1816-2020"),
sd.S=NA, mp.S=NA, sd.t = NA, mp.t = NA,
sd.xi = NA, mp.xi = NA,  sd.Q100 = NA, mp.Q100 = NA,
sd.Q1000 = NA, mp.Q1000 = NA)
endPhist = Q$an[1]
m=1
### S
ResAll[m,]$sd.S = round(sd(Params$value[which(Params$model == paste0(models[m],shortm[m]) &
Params$variable == "Thres") ] ) )
ResAll[m,]$mp.S = round(ParamsMp$value[which(ParamsMp$model == paste0(models[m],shortm[m]) &
ParamsMp$variable == "Seuil") ] )
### t*
ResAll[m,]$sd.t = round(sd(Params$value[which(Params$model == paste0(models[m],shortm[m]) &
Params$variable == "Nban") ] ) )
ResAll[m,]$mp.t = round(endPhist - ParamsMp$value[which(ParamsMp$model == paste0(models[m],shortm[m]) &
ParamsMp$variable == "NBan") ] )
### xi
ResAll[m,]$sd.xi = round(sd(Params$value[which(Params$model == paste0(models[m],shortm[m]) &
Params$variable == "Shape") ] ),3)
ResAll[m,]$mp.xi = round(ParamsMp$value[which(ParamsMp$model == paste0(models[m],shortm[m]) &
ParamsMp$variable == "Form") ],3)
### Q100
ResAll[m,]$sd.Q100 = round( ((Quants100$Q_9 - Quants100$Mp)/2)[m] )
ResAll[m,]$mp.Q100 = round( Quants100$Mp[m] )
#Q1000
ResAll[m,]$sd.Q1000 = round( ((Quants1000$Q_9 - Quants1000$Mp)/2)[m] )
ResAll[m,]$mp.Q1000 = round( Quants1000$Mp[m] )
### BASELINES
b=2
### xi
ResAll[b,]$sd.xi = round(sd(Params$value[which( Params$model == "GEV_1816-2020" &
Params$variable == "Shape") ] ),3)
ResAll[b,]$mp.xi = round(ParamsMp$value[which( ParamsMp$model == "GEV_1816-2020" &
ParamsMp$variable == "Form") ],3)
### Q100
ResAll[b,]$sd.Q100 = round( ((Quants100$Q_9 - Quants100$Mp)/2)[b] )
ResAll[b,]$mp.Q100 = round( Quants100$Mp[b] )
#Q1000
ResAll[b,]$sd.Q1000 = round( ((Quants1000$Q_9 - Quants1000$Mp)/2)[b] )
ResAll[b,]$mp.Q1000 = round( Quants1000$Mp[b] )
### write resume results
write.csv2(ResAll, paste0(dir.res.case,"/ResultsAll",case,".csv"), row.names = F)
############ BARPLOT QUANTILES ############
### Q100
BarQ100 = ggplot(data=Quants100, aes(x = model, y = Mp, ymin = Q_2, ymax = Q_9, fill = model))+
geom_bar( stat="identity",width = 0.8,alpha = 0.7)+
geom_errorbar(width=0.3, colour="black", alpha=0.6, size=0.6)+
scale_fill_manual(values = c(palbase,palmod))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
# ylab(expression(paste("Débit [",m^3,"/",s,"]",sep="")))+
theme_light(base_size = textsize)+
ggtitle(paste0("Q100 - Sample n° 2"))+
scale_x_discrete(labels=c('GEV',models))
BarQ1000 = ggplot(data=Quants1000, aes(x = model, y = Mp, ymin = Q_2, ymax = Q_9, fill = model))+
geom_bar( stat="identity",width = 0.8,alpha = 0.7)+
geom_errorbar(width=0.3, colour="black", alpha=0.6, size=0.6)+
scale_fill_manual(values = c(palbase,palmod))+
ylab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
# ylab(expression(paste("Débit [",m^3,"/",s,"]",sep="")))+
theme_light(base_size = textsize)+
ggtitle(paste0("Q1000 - Sample n° 2"))+
scale_x_discrete(labels=c('GEV',models))
ggarrange(BarQ100+coord_cartesian(ylim = c(5000,max(Quants1000$Q_9)) )+
theme(axis.title.x = element_blank(),legend.title = element_blank()),
BarQ1000+coord_cartesian(ylim = c(5000,max(Quants1000$Q_9)) )+
theme(axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.title = element_blank()),
common.legend = T, legend = "right")
ggsave(path = paste0(dir.plot.case), filename = paste0("Barplots_QX_",case,".pdf"),
width = 13,height = 8)
############ PLOT POSTERIOR PARAMETERS ############
####  SHAPE
GGShape = ggplot(Params[which(Params$variable=="Shape"),],
aes(y = model, x = value, group = model, fill = model)) +
geom_density_ridges(alpha=0.7,stat = "binline",bins = 60, scale = 1.2,color = NA)+
geom_segment(data = ParamsMp[which(ParamsMp$variable == "Form"),],
aes(x = value, xend = value,
y=(1:length(Quants100$model)),yend=(2:(length(Quants100$model)+1)),color = model)
, lwd = 1)+
scale_x_continuous(expand = c(0, 0))+
scale_y_discrete(expand = c(0, 0)) +
theme_light(base_size = textsize)+
scale_fill_manual(values = c(palmod,palbase) )+
scale_color_manual(values = c(palmod,palbase) )+
xlab("[-]")+
theme(axis.title.y = element_blank(),legend.title = element_blank())+
ggtitle("GEV Shape parameter \u03bE")+
# ggtitle("Paramètre de forme \u03bE")+
coord_cartesian(xlim=c(0-2*sd(Params$value[which(Params$variable=="Shape")]),
0+5*sd(Params$value[which(Params$variable=="Shape")])))
ggsave(path = paste0(dir.plot.case), filename = paste0("Shape_",case,".pdf"),
device = cairo_pdf, width = 10,height = 8)
#### Threshold
priorthres = Params[which(Params$variable=="Thres" & Params$model==paste0(models[1],shortm[1])
& Params$sample==samples),]
priorthres$value = rnorm(length(priorthres$model),Thres,sdThres)
priorthres$model = "1-Prior"
ParamsMp$value[which(ParamsMp$variable == "Seuil")][which(distsTs == "FIX")] = 0
for(i in 1:length(models[which(distsTs == "FIX")])){Params$value[which(Params$variable=="Thres" &
Params$model== paste0(models,shortm)[which(distsTs == "FIX")][i])] = 0}
GGThres = ggplot( rbind(priorthres,Params[which(Params$variable == "Thres" ),]),
aes(x = value, fill = model)) +
geom_histogram(aes(y=..density..),position = "identity", bins = 300, alpha = 0.7, color = NA)+
geom_density(data=priorthres, aes(x = value),fill = NA, lty = 2)+
geom_vline(data = ParamsMp[which(ParamsMp$variable == "Seuil"),],
aes( xintercept = value, color = model), lwd = 1, alpha = 1,show.legend = F)+
scale_fill_manual(values = c(colprior, palmod) )+
scale_color_manual(values = palmod)+
coord_cartesian(ylim=c(0,1.5*max(density(Params$value[which(Params$variable=="Thres" &
Params$sample==samples & Params$model=="D*: uS&t*")])$y)),
xlim=c(Thres-2.5*sdThres, Thres+3*sdThres))+
theme_light(base_size = textsize)+
geom_vline(xintercept = Thres, lwd = 1, lty = 2)+
xlab(expression(paste("Discharge [",m^3,".",s^-1,"]",sep="")))+
ylab("Density")+
ggtitle("Perception threshold")+
# xlab(expression(paste("Débit [",m^3,"/",s,"]",sep="")))+
# ylab("Densité")+
# ggtitle("Seuil de perception S")+
theme(legend.title = element_blank())
#### Historical period length
priornban = Params[which(Params$variable=="Nban" & Params$model==paste0(models[1],shortm[1])
& Params$sample==samples),]
priornban$value = runif(length(priornban$model),NbanS,NbanS+MaxUnif_Nban)
priornban$model = "1-Prior"
for(i in 1:length(models[which(distsNb == "FIX")])){Params$value[which(Params$variable=="Nban" &
Params$model==paste0(models,shortm)[which(distsNb == "FIX")][i])] = 0  }
ParamsMp$value[which(ParamsMp$variable=="NBan")][which(distsNb == "FIX")] = 0
endPhist = Q$an[1]
#### CALCULATION OF START DATE FROM ILARIA PRODOSCIMI
## number of floods histo
k = length(Occs)
## differences between time of occurrence of historical events and start of systematic records
tk = (endPhist) - Occs[1]
T_Ilaria = (endPhist) - round(tk + tk/k - 1)
## Calcul TGEV(S) Michel
T_RpThres = Occs[1] - round(1/(1-prob[which.min(abs(QuantsAll[[1]]$Mp - Thres))]))
GGNban = ggplot(rbind(priornban,Params[which(Params$variable == "Nban"),]),
aes(x = endPhist-value, fill = model)) +
geom_histogram(aes(y=..density..),position = "identity", bins = 600, alpha = 0.7,color = NA)+
geom_density(data=priornban, aes(x = endPhist-value), adjust = 0.4, fill = NA, lty = 2)+
geom_vline(data = ParamsMp[which(ParamsMp$variable == "NBan"),],
aes(xintercept = endPhist-value, color = model), lwd = 1, alpha = 1,
show.legend = T, lty=1)+
geom_vline(aes(xintercept = StartH, color = "Reference"), lwd = 1, lty = 2)+
geom_vline(aes(xintercept = T_Ilaria, color = "Prosdocimi"), lwd = 1, lty = 2)+
geom_vline(aes(xintercept = T_RpThres, color = "T_GEV(S)"), lwd = 1, lty = 2)+
scale_fill_manual(values = c(colprior, palmod) )+
scale_color_manual(values = c(palmod,"#31a354","black","#e7298a"))+
coord_cartesian(ylim = c(0, 1.1*max(density(Params$value[which(Params$variable=="Nban" &
Params$sample==samples & Params$model==paste0(models,shortm))])$y)),
# xlim = c( endPhist-max(ParamsMp$value[which(ParamsMp$variable=="NBan")])-30,
#           endPhist-NbanS[s]+2 )  )+
xlim = c( endPhist-(max(priornban$value)+5),
endPhist-NbanS+5 )  )+
theme_light(base_size = textsize)+
xlab("Year")+
ylab("Density")+
ggtitle("Start date of historical period")+
# xlab("Année")+
# ylab("Densité")+
# ggtitle("Date de début de la période historique t*")+
theme(legend.title = element_blank())
## ARRANGE
ggarrange(GGThres,GGNban+theme(axis.title.y = element_blank()),
ncol = 2, common.legend = T, legend = "bottom", align = "hv")
ggsave(path = dir.plot.case, filename = paste0("Params_",case,".pdf"),
width = 15,height = 7)
